<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Incident Notification Filter</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
	//Query the notification_keywords table	

	// Email addresses
	var emailAddress1;
	var emailAddress2;
	var emailAddress3;
	var emailAddresses;
	var keyword;
	var priority1;
	var priorities = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

	//Queue name
	var queueName = 'x_197131_sensiple.sensiple.ticket.regist';
	var description;
	var splittedDescription;
	var descriptionValue = false;
	var isNotify = false;
	var incidentNumber = current.getValue('number');
	if (current.getValue('description')) {
		description = current.getValue('description').replace(/[^\w\s]/gi, '').toLowerCase();
		splittedDescription = description.split(/[ ,]+/);
		descriptionValue = true;
	}
	var shortDescription = current.getValue('short_description').replace(/[^\w\s]/gi, '').toLowerCase();
	var splittedShortDescription = shortDescription.split(/[ ,]+/);

	for (var a = 0; a < priorities.length; a++) {
		var notificationKeywordRecord = new GlideRecord('x_197131_sensiple_notification_keywords');
		notificationKeywordRecord.addQuery('priority', '=', priorities[a]);
		notificationKeywordRecord.query();
		while (notificationKeywordRecord.next()) {
			var priority = notificationKeywordRecord.getValue('priority');
			
			if (priorities[a] == priority) {

				var keywords = notificationKeywordRecord.getValue('keywords').toLowerCase();
				var splittedWords = keywords.split(/[ ,]+/);

				for (var x = 0; x < splittedWords.length; x++) {
					for (var y = 0; y < splittedShortDescription.length; y++) {

						if (splittedWords[x] == splittedShortDescription[y]) {

							isNotify = true;
							keyword = splittedWords[x];
							priority1 = priority;
							emailAddress1 = notificationKeywordRecord.getValue('email_address1');
							emailAddress2 = notificationKeywordRecord.getValue('email_address2');
							emailAddress3 = notificationKeywordRecord.getValue('email_address3');
							emailAddresses = emailAddress1 + ", " + emailAddress2 + ", " + emailAddress3;
							break;
						}
					}
					if(isNotify)
					break;
				}
				if (descriptionValue) {
					if (!isNotify) {

						for (var i = 0; i < splittedWords.length; i++) {
							for (var j = 0; j < splittedDescription.length; j++) {
								if (splittedWords[i] == splittedDescription[j]) {
									isNotify = true;
									keyword = splittedWords[i];
									priority1 = priority;
									emailAddress1 = notificationKeywordRecord.getValue('email_address1');
									emailAddress2 = notificationKeywordRecord.getValue('email_address2');
									emailAddress3 = notificationKeywordRecord.getValue('email_address3');
									emailAddresses = emailAddress1 + ", " + emailAddress2 + ", " + emailAddress3;
									break;
								}
							}
							if(isNotify)
							break;
						}
					}
				}
			}
			if(isNotify)
			break;
		}
		if(isNotify)
		break;
	}

	if (isNotify) {

		var notificationLogs = new GlideRecord('x_197131_sensiple_notificationlogs');
		notificationLogs.incident_number = incidentNumber;
		notificationLogs.email_addresses = emailAddresses;
		notificationLogs.short_description = current.getValue('short_description');
		notificationLogs.keywords = keyword;
		notificationLogs.caller_id = current.getValue('caller_id');
		notificationLogs.priority = priority1;
		notificationLogs.insert();

		var incidentUpdate = new GlideRecord("incident");
		incidentUpdate.addQuery('number', '=', current.getValue('number'));
		incidentUpdate.query();
		while (incidentUpdate.next()) {
			incidentUpdate.x_197131_sensiple_priority_colour_indicator = priority1;
			incidentUpdate.update();
		}

		gs.eventQueue(queueName, current, emailAddress1, incidentNumber);

		if (emailAddress2) {
			gs.eventQueue(queueName, current, emailAddress2, incidentNumber);
		}
		if (emailAddress3) {
			gs.eventQueue(queueName, current, emailAddress3, incidentNumber);
		}
	} else {
		var incidentUpdate1 = new GlideRecord("incident");
		incidentUpdate1.addQuery('number', '=', current.getValue('number'));
		incidentUpdate1.query();
		while (incidentUpdate1.next()) {
			incidentUpdate1.x_197131_sensiple_priority_colour_indicator = " ";
			incidentUpdate1.update();
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-03-23 15:07:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f8716c99db051300506e5ff0cf96196a</sys_id>
        <sys_mod_count>167</sys_mod_count>
        <sys_name>Incident Notification Filter</sys_name>
        <sys_overrides/>
        <sys_package display_value="Churn Prevention Utility" source="x_197131_sensiple">496fd019db051300506e5ff0cf961935</sys_package>
        <sys_policy/>
        <sys_scope display_value="Churn Prevention Utility">496fd019db051300506e5ff0cf961935</sys_scope>
        <sys_update_name>sys_script_f8716c99db051300506e5ff0cf96196a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-17 10:02:16</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f8716c99db051300506e5ff0cf96196a"/>
</record_update>
